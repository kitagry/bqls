name: Release

on:
  push:
    tags: ["*"]

jobs:
  release:
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            lower_os: linux
            asset_name: bqls_linux_amd64
          - os: macos-latest
            lower_os: macos
            asset_name: bqls_darwin_amd64
    name: Release Go Binary
    runs-on: ${{ matrix.os }}
    env:
      BIN_NAME: bqls

    steps:
    - uses: actions/checkout@v4
    - name: setup Go
      uses: actions/setup-go@v5
      with:
        go-version-file: go.mod
        cache: true

    - name: cache for linux
      uses: actions/cache@v4
      if: runner.os == 'Linux'
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: cache for macOS
      uses: actions/cache@v4
      if: runner.os == 'macOS'
      with:
        path: |
          ~/Library/Caches/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: download modules
      run: |
        go mod download

    - uses: rui314/setup-mold@v1

    - name: Set tag to environment variable
      id: set-tag
      run: echo ::set-output name=version::${GITHUB_REF#refs/*/}

    - name: build
      run: mkdir ./build && go build -o ./build/bqls -ldflags '-s -w -X main.version=${{ steps.set-tag.outputs.version }}' .
      env:
        CC: clang
        CXX: clang++

    - name: Zip binaries
      run: |
        cd build
        zip ${{ matrix.asset_name }}.zip bqls
        ls -lR ./
        cd ../

    - name: Upload binaries to release
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: ./build/${{ matrix.asset_name }}.zip
        tag: ${{ github.ref }}
